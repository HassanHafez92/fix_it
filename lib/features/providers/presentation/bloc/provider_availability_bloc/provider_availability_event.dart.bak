part of 'provider_availability_bloc.dart';

/// ProviderAvailabilityEvent
///
/// Events related to provider availability and booking operations.
abstract class ProviderAvailabilityEvent extends Equatable {
  const ProviderAvailabilityEvent();

  @override
  List<Object> get props => [];
}

/// LoadProviderAvailabilityEvent
///
/// Business Rules:
///  - Triggered to load availability for a specific provider id.
///  - UI should show loading state until availability data is emitted.
class LoadProviderAvailabilityEvent extends ProviderAvailabilityEvent {
  final String providerId;

  const LoadProviderAvailabilityEvent({
    required this.providerId,
  });

  @override
  List<Object> get props => [providerId];
}

/// BookTimeSlotEvent
///
/// Business Rules:
///  - Requests booking of a specific provider at `dateTime`.
///  - The bloc will emit `BookingRequested` on success or an error state on failure.
class BookTimeSlotEvent extends ProviderAvailabilityEvent {
  final String providerId;
  final DateTime dateTime;

  const BookTimeSlotEvent({
    required this.providerId,
    required this.dateTime,
  });

  @override
  List<Object> get props => [providerId, dateTime];
}
